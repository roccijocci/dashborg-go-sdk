syntax = "proto3";
package dashborg.rpc1;
option go_package = "github.com/sawka/dashborg-go-sdk/pkg/dashproto";

message RtnStatus {
    bool Success = 1;
    string Err = 2;
    string ErrCode = 3;
    bool PermErr = 4;
}

message RRAction {
    int64 Ts = 1;
    string ActionType = 2;  // "setdata", "event", "invalidate", "html", "panelauth", "panelauthchallenge", "error", "blob", "blobext", "streamopen", "triggerdata", "backendpush"
    string Selector = 3;    // path, selector, controlid
    string JsonData = 4;
    string OpType = 5;
    string Html = 6;
    string Err = 7;
    bytes BlobBytes = 8;        // for "blob" / "blobext" ActionType
    string BlobMimeType = 9;    // for "blob" ActionType
    string ReqId = 10;          // transient for LocalServer
}

message SendResponseMessage {
    int64 Ts = 1;
    string ReqId = 2;
    string RequestType = 3; // "data", "handler", "stream"
    string PanelName = 4;
    string FeClientId = 5;
    bool ResponseDone = 6;
    repeated RRAction Actions = 7;
    string Err = 8;
}

message RequestMessage {
    int64 Ts = 1;
    string AccId = 2;
    string ZoneName = 3;
    string PanelName = 4;
    string RequestType = 5; // "data", "handler", "streamclose", "servermessage"
    string Path = 6;
    string ReqId = 7;
    string FeClientId = 8;
    string ControlId = 9;
    string JsonData = 10;
    string AuthData = 11;
    string PanelStateData = 12;
    RtnStatus Status = 13;     // only used for server-side errors
    int64 TimeoutMs = 15;
    repeated string DataPaths = 16;
    bool IsBackendCall = 17;
}

message HandlerKey {
    string PanelName = 1;
    string HandlerType = 2; // "data", "handler"
    string Path = 3;
}    

message ConnectClientMessage {
    int64 Ts = 1;
    string ProcRunId = 2;
    string AccId = 3;
    string ZoneName = 4;
    bool AnonAcc = 5;
    string ProcName = 6;
    map<string,string> ProcTags = 7;
    map<string,string> HostData = 8;
    int64 StartTs = 9;
    repeated string ReconnectAppRuntimes = 13;
}

message ConnectClientResponse {
    RtnStatus Status = 1;
    string ConnId = 5;
    string AccInfoJson = 6;
    repeated string ReconnectErrs = 7;
}

message RequestStreamMessage {
    int64 Ts = 1;
}

message SendResponseResponse {
    RtnStatus Status = 1;
    int32 NumStreamClients = 4;
}

message StartStreamMessage {
    int64 Ts = 1;

    string PanelName = 2;
    string FeClientId = 3;
    string ExistingReqId = 4;
}

message StartStreamResponse {
    RtnStatus Status = 1;
    string ReqId = 3;
}

message ReflectZoneMessage {
    int64 Ts = 1;
}

message ReflectZoneResponse {
    RtnStatus Status = 1;
    string JsonData = 3;
}

message CallDataHandlerMessage {
    int64 Ts = 1;
    string PanelName = 2;
    string Path = 3;
    string JsonData = 4;
}

message CallDataHandlerResponse {
    RtnStatus Status = 1;
    string JsonData = 3;
}

message BackendPushMessage {
    int64 Ts = 1;
    string PanelName = 2;
    string Path = 3;
}

message BackendPushResponse {
    RtnStatus Status = 1;
}

message OpenAppMessage {
    int64 Ts = 1;
    string AppName = 2;
}

message OpenAppResponse {
    RtnStatus Status = 1;
    string AppConfigJson = 2;
}

message WriteAppMessage {
    int64 Ts = 1;
    string AppName = 2;
    string AppConfigJson = 3;
    bool ConnectApp = 4;
}

message WriteAppResponse {
    RtnStatus Status = 1;
    map<string,string> OptionWarnings = 3;
}

message SetBlobMessage {
    int64 Ts = 1;
    string AppName = 2;
    string AppVersion = 3;
    string BlobDataJson = 4;
    string BlobBytesKey = 5;
    bytes BlobBytes = 6;
    bool ClientErr = 7;
}

message SetBlobResponse {
    RtnStatus Status = 1;
    bool BlobFound = 2;
    string BlobBytesKey = 3;
}

message RemoveAppMessage {
    int64 Ts = 1;
    string AppName = 2;
}

message RemoveAppResponse {
    RtnStatus Status = 1;
}

message RemoveBlobMessage {
    int64 Ts = 1;
    string AppName = 2;
    string AppVersion = 3;
    string BlobDataJson = 4;
}

message RemoveBlobResponse {
    RtnStatus Status = 1;
}

service DashborgService {
    rpc ConnectClient(ConnectClientMessage) returns (ConnectClientResponse) {}
    rpc ReflectZone(ReflectZoneMessage) returns (ReflectZoneResponse) {}
    rpc CallDataHandler(CallDataHandlerMessage) returns (CallDataHandlerResponse) {}
    
    rpc RequestStream(RequestStreamMessage) returns (stream RequestMessage) {} // backwards
    rpc SendResponse(SendResponseMessage) returns (SendResponseResponse) {}
    rpc StartStream(StartStreamMessage) returns (StartStreamResponse) {}
    rpc BackendPush(BackendPushMessage) returns (BackendPushResponse) {}

    rpc OpenApp(OpenAppMessage) returns (OpenAppResponse) {}
    rpc WriteApp(WriteAppMessage) returns (WriteAppResponse) {}
    rpc SetBlob(stream SetBlobMessage) returns (stream SetBlobResponse) {}
    rpc RemoveBlob(RemoveBlobMessage) returns (RemoveBlobResponse) {}
    rpc RemoveApp(RemoveAppMessage) returns (RemoveAppResponse) {}
}

