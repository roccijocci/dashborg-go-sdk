syntax = "proto3";
package dashborg.rpc1;
option go_package = "github.com/sawka/dashborg-go-sdk/pkg/dashproto";

message RtnStatus {
    bool Success = 1;
    string Err = 2;
    string ErrCode = 3;
    bool PermErr = 4;
}

message AppId {
    string AppName = 3;
    string AppVersion = 4;
}

message PathId {
    string PathNs = 1;
    string Path = 2;
    string PathFrag = 3;
}

message RRAction {
    int64 Ts = 1;
    string ActionType = 2;
    string Selector = 3;    // path, selector, controlid
    string JsonData = 4;
    string OpType = 5;
    string Html = 6;
    string Err = 7;
    bytes BlobBytes = 8;        // for "blob" / "blobext" ActionType
    string BlobMimeType = 9;    // for "blob" ActionType
    string ReqId = 10;          // transient for LocalServer
}

message SendResponseMessage {
    int64 Ts = 1;
    string ReqId = 2;
    string RequestType = 3;
    AppId AppId = 4;
    PathId Path = 9;
    string FeClientId = 5;
    bool ResponseDone = 6;
    repeated RRAction Actions = 7;
    string Err = 8;
}

message SendResponseResponse {
    RtnStatus Status = 1;
    int32 NumStreamClients = 2;
}

message RequestMessage {
    int64 Ts = 1;
    string AccId = 2;
    string ZoneName = 3;
    AppId AppId = 4;
    string RequestType = 5;
    PathId Path = 6;
    string ReqId = 7;
    string FeClientId = 8;
    string ControlId = 9;
    string JsonData = 10;
    string AuthData = 11;
    string AppStateData = 12;
    RtnStatus Status = 13;     // only used for server-side errors
    int64 TimeoutMs = 14;
    bool IsBackendCall = 15;
    bool AppRequest = 16;
    string RequestMethod = 17;
}

message ConnectClientMessage {
    int64 Ts = 1;
    string ProcRunId = 2;
    string AccId = 3;
    string ZoneName = 4;
    bool AnonAcc = 5;
    string ProcName = 6;
    map<string,string> ProcTags = 7;
    map<string,string> HostData = 8;
    int64 StartTs = 9;
}

message ConnectClientResponse {
    RtnStatus Status = 1;
    string ConnId = 2;
    string AccInfoJson = 3;
}

message RequestStreamMessage {
    int64 Ts = 1;
}

message SetPathMessage {
    int64 Ts = 1;
    PathId Path = 2;
    string TxId = 3;
    bool HasBody = 4;
    bool ConnectRuntime = 5;
    string FileOptsJson = 6;
    string BlobBytesKey = 7;
    bytes BlobBytes = 8;
    bool ClientErr = 9;
}

message SetPathResponse {
    RtnStatus Status = 1;
    bool BlobFound = 2;
    string BlobBytesKey = 3;
}

message RemovePathMessage {
    int64 Ts = 1;
    PathId Path = 2;
}

message RemovePathResponse {
    RtnStatus Status = 1;
}

message FileInfoMessage {
    int64 Ts = 1;
    PathId Path = 2;
    string DirOptsJson = 3;
    bool RtnContents = 4;
}

message FileInfoResponse {
    RtnStatus Status = 1;
    string FileInfoJson = 2;
    bytes FileContent = 3;
    bool FileContentRtn = 4;
}

message ConnectLinkMessage {
    int64 Ts = 1;
    PathId Path = 2;
}

message ConnectLinkResponse {
    RtnStatus Status = 1;
}

service DashborgService {
    rpc ConnectClient(ConnectClientMessage) returns (ConnectClientResponse) {}
    rpc RequestStream(RequestStreamMessage) returns (stream RequestMessage) {} // backwards
    rpc SendResponse(SendResponseMessage) returns (SendResponseResponse) {}
    rpc SetPath(stream SetPathMessage) returns (stream SetPathResponse) {}
    rpc RemovePath(RemovePathMessage) returns (RemovePathResponse) {}
    rpc FileInfo(FileInfoMessage) returns (FileInfoResponse) {}
    rpc ConnectLink(ConnectLinkMessage) returns (ConnectLinkResponse) {}
}

