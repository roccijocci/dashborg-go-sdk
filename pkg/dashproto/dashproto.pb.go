// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: pkg/dashproto/dashproto.proto

package dashproto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RtnStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
	ErrCode string `protobuf:"bytes,3,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	PermErr bool   `protobuf:"varint,4,opt,name=PermErr,proto3" json:"PermErr,omitempty"`
}

func (x *RtnStatus) Reset() {
	*x = RtnStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtnStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtnStatus) ProtoMessage() {}

func (x *RtnStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtnStatus.ProtoReflect.Descriptor instead.
func (*RtnStatus) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{0}
}

func (x *RtnStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RtnStatus) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RtnStatus) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *RtnStatus) GetPermErr() bool {
	if x != nil {
		return x.PermErr
	}
	return false
}

type AppId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName    string `protobuf:"bytes,3,opt,name=AppName,proto3" json:"AppName,omitempty"`
	AppVersion string `protobuf:"bytes,4,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
}

func (x *AppId) Reset() {
	*x = AppId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppId) ProtoMessage() {}

func (x *AppId) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppId.ProtoReflect.Descriptor instead.
func (*AppId) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{1}
}

func (x *AppId) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *AppId) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type PathId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathNs   string `protobuf:"bytes,1,opt,name=PathNs,proto3" json:"PathNs,omitempty"`
	Path     string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	PathFrag string `protobuf:"bytes,3,opt,name=PathFrag,proto3" json:"PathFrag,omitempty"`
}

func (x *PathId) Reset() {
	*x = PathId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathId) ProtoMessage() {}

func (x *PathId) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathId.ProtoReflect.Descriptor instead.
func (*PathId) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{2}
}

func (x *PathId) GetPathNs() string {
	if x != nil {
		return x.PathNs
	}
	return ""
}

func (x *PathId) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PathId) GetPathFrag() string {
	if x != nil {
		return x.PathFrag
	}
	return ""
}

type RRAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts           int64  `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	ActionType   string `protobuf:"bytes,2,opt,name=ActionType,proto3" json:"ActionType,omitempty"`
	Selector     string `protobuf:"bytes,3,opt,name=Selector,proto3" json:"Selector,omitempty"` // path, selector, controlid
	JsonData     string `protobuf:"bytes,4,opt,name=JsonData,proto3" json:"JsonData,omitempty"`
	OpType       string `protobuf:"bytes,5,opt,name=OpType,proto3" json:"OpType,omitempty"`
	Html         string `protobuf:"bytes,6,opt,name=Html,proto3" json:"Html,omitempty"`
	Err          string `protobuf:"bytes,7,opt,name=Err,proto3" json:"Err,omitempty"`
	BlobBytes    []byte `protobuf:"bytes,8,opt,name=BlobBytes,proto3" json:"BlobBytes,omitempty"`       // for "blob" / "blobext" ActionType
	BlobMimeType string `protobuf:"bytes,9,opt,name=BlobMimeType,proto3" json:"BlobMimeType,omitempty"` // for "blob" ActionType
	ReqId        string `protobuf:"bytes,10,opt,name=ReqId,proto3" json:"ReqId,omitempty"`              // transient for LocalServer
}

func (x *RRAction) Reset() {
	*x = RRAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RRAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RRAction) ProtoMessage() {}

func (x *RRAction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RRAction.ProtoReflect.Descriptor instead.
func (*RRAction) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{3}
}

func (x *RRAction) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *RRAction) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

func (x *RRAction) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (x *RRAction) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *RRAction) GetOpType() string {
	if x != nil {
		return x.OpType
	}
	return ""
}

func (x *RRAction) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *RRAction) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RRAction) GetBlobBytes() []byte {
	if x != nil {
		return x.BlobBytes
	}
	return nil
}

func (x *RRAction) GetBlobMimeType() string {
	if x != nil {
		return x.BlobMimeType
	}
	return ""
}

func (x *RRAction) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

type SendResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts           int64       `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	ReqId        string      `protobuf:"bytes,2,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	RequestType  string      `protobuf:"bytes,3,opt,name=RequestType,proto3" json:"RequestType,omitempty"`
	AppId        *AppId      `protobuf:"bytes,4,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Path         *PathId     `protobuf:"bytes,9,opt,name=Path,proto3" json:"Path,omitempty"`
	FeClientId   string      `protobuf:"bytes,5,opt,name=FeClientId,proto3" json:"FeClientId,omitempty"`
	ResponseDone bool        `protobuf:"varint,6,opt,name=ResponseDone,proto3" json:"ResponseDone,omitempty"`
	Actions      []*RRAction `protobuf:"bytes,7,rep,name=Actions,proto3" json:"Actions,omitempty"`
	Err          string      `protobuf:"bytes,8,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *SendResponseMessage) Reset() {
	*x = SendResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponseMessage) ProtoMessage() {}

func (x *SendResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponseMessage.ProtoReflect.Descriptor instead.
func (*SendResponseMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{4}
}

func (x *SendResponseMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *SendResponseMessage) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *SendResponseMessage) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *SendResponseMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *SendResponseMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *SendResponseMessage) GetFeClientId() string {
	if x != nil {
		return x.FeClientId
	}
	return ""
}

func (x *SendResponseMessage) GetResponseDone() bool {
	if x != nil {
		return x.ResponseDone
	}
	return false
}

func (x *SendResponseMessage) GetActions() []*RRAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *SendResponseMessage) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type SendResponseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	NumStreamClients int32      `protobuf:"varint,2,opt,name=NumStreamClients,proto3" json:"NumStreamClients,omitempty"`
}

func (x *SendResponseResponse) Reset() {
	*x = SendResponseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponseResponse) ProtoMessage() {}

func (x *SendResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponseResponse.ProtoReflect.Descriptor instead.
func (*SendResponseResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{5}
}

func (x *SendResponseResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SendResponseResponse) GetNumStreamClients() int32 {
	if x != nil {
		return x.NumStreamClients
	}
	return 0
}

type RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts            int64      `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AccId         string     `protobuf:"bytes,2,opt,name=AccId,proto3" json:"AccId,omitempty"`
	ZoneName      string     `protobuf:"bytes,3,opt,name=ZoneName,proto3" json:"ZoneName,omitempty"`
	AppId         *AppId     `protobuf:"bytes,4,opt,name=AppId,proto3" json:"AppId,omitempty"`
	RequestType   string     `protobuf:"bytes,5,opt,name=RequestType,proto3" json:"RequestType,omitempty"`
	Path          *PathId    `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path,omitempty"`
	ReqId         string     `protobuf:"bytes,7,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	FeClientId    string     `protobuf:"bytes,8,opt,name=FeClientId,proto3" json:"FeClientId,omitempty"`
	ControlId     string     `protobuf:"bytes,9,opt,name=ControlId,proto3" json:"ControlId,omitempty"`
	JsonData      string     `protobuf:"bytes,10,opt,name=JsonData,proto3" json:"JsonData,omitempty"`
	AuthData      string     `protobuf:"bytes,11,opt,name=AuthData,proto3" json:"AuthData,omitempty"`
	AppStateData  string     `protobuf:"bytes,12,opt,name=AppStateData,proto3" json:"AppStateData,omitempty"`
	Status        *RtnStatus `protobuf:"bytes,13,opt,name=Status,proto3" json:"Status,omitempty"` // only used for server-side errors
	TimeoutMs     int64      `protobuf:"varint,14,opt,name=TimeoutMs,proto3" json:"TimeoutMs,omitempty"`
	IsBackendCall bool       `protobuf:"varint,15,opt,name=IsBackendCall,proto3" json:"IsBackendCall,omitempty"`
	AppRequest    bool       `protobuf:"varint,16,opt,name=AppRequest,proto3" json:"AppRequest,omitempty"`
}

func (x *RequestMessage) Reset() {
	*x = RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMessage) ProtoMessage() {}

func (x *RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMessage.ProtoReflect.Descriptor instead.
func (*RequestMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{6}
}

func (x *RequestMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *RequestMessage) GetAccId() string {
	if x != nil {
		return x.AccId
	}
	return ""
}

func (x *RequestMessage) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *RequestMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *RequestMessage) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *RequestMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *RequestMessage) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *RequestMessage) GetFeClientId() string {
	if x != nil {
		return x.FeClientId
	}
	return ""
}

func (x *RequestMessage) GetControlId() string {
	if x != nil {
		return x.ControlId
	}
	return ""
}

func (x *RequestMessage) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *RequestMessage) GetAuthData() string {
	if x != nil {
		return x.AuthData
	}
	return ""
}

func (x *RequestMessage) GetAppStateData() string {
	if x != nil {
		return x.AppStateData
	}
	return ""
}

func (x *RequestMessage) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RequestMessage) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *RequestMessage) GetIsBackendCall() bool {
	if x != nil {
		return x.IsBackendCall
	}
	return false
}

func (x *RequestMessage) GetAppRequest() bool {
	if x != nil {
		return x.AppRequest
	}
	return false
}

type ConnectClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        int64             `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	ProcRunId string            `protobuf:"bytes,2,opt,name=ProcRunId,proto3" json:"ProcRunId,omitempty"`
	AccId     string            `protobuf:"bytes,3,opt,name=AccId,proto3" json:"AccId,omitempty"`
	ZoneName  string            `protobuf:"bytes,4,opt,name=ZoneName,proto3" json:"ZoneName,omitempty"`
	AnonAcc   bool              `protobuf:"varint,5,opt,name=AnonAcc,proto3" json:"AnonAcc,omitempty"`
	ProcName  string            `protobuf:"bytes,6,opt,name=ProcName,proto3" json:"ProcName,omitempty"`
	ProcTags  map[string]string `protobuf:"bytes,7,rep,name=ProcTags,proto3" json:"ProcTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HostData  map[string]string `protobuf:"bytes,8,rep,name=HostData,proto3" json:"HostData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StartTs   int64             `protobuf:"varint,9,opt,name=StartTs,proto3" json:"StartTs,omitempty"`
}

func (x *ConnectClientMessage) Reset() {
	*x = ConnectClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectClientMessage) ProtoMessage() {}

func (x *ConnectClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectClientMessage.ProtoReflect.Descriptor instead.
func (*ConnectClientMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectClientMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ConnectClientMessage) GetProcRunId() string {
	if x != nil {
		return x.ProcRunId
	}
	return ""
}

func (x *ConnectClientMessage) GetAccId() string {
	if x != nil {
		return x.AccId
	}
	return ""
}

func (x *ConnectClientMessage) GetZoneName() string {
	if x != nil {
		return x.ZoneName
	}
	return ""
}

func (x *ConnectClientMessage) GetAnonAcc() bool {
	if x != nil {
		return x.AnonAcc
	}
	return false
}

func (x *ConnectClientMessage) GetProcName() string {
	if x != nil {
		return x.ProcName
	}
	return ""
}

func (x *ConnectClientMessage) GetProcTags() map[string]string {
	if x != nil {
		return x.ProcTags
	}
	return nil
}

func (x *ConnectClientMessage) GetHostData() map[string]string {
	if x != nil {
		return x.HostData
	}
	return nil
}

func (x *ConnectClientMessage) GetStartTs() int64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

type ConnectClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	ConnId      string     `protobuf:"bytes,2,opt,name=ConnId,proto3" json:"ConnId,omitempty"`
	AccInfoJson string     `protobuf:"bytes,3,opt,name=AccInfoJson,proto3" json:"AccInfoJson,omitempty"`
}

func (x *ConnectClientResponse) Reset() {
	*x = ConnectClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectClientResponse) ProtoMessage() {}

func (x *ConnectClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectClientResponse.ProtoReflect.Descriptor instead.
func (*ConnectClientResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectClientResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ConnectClientResponse) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

func (x *ConnectClientResponse) GetAccInfoJson() string {
	if x != nil {
		return x.AccInfoJson
	}
	return ""
}

type RequestStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts int64 `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *RequestStreamMessage) Reset() {
	*x = RequestStreamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStreamMessage) ProtoMessage() {}

func (x *RequestStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStreamMessage.ProtoReflect.Descriptor instead.
func (*RequestStreamMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{9}
}

func (x *RequestStreamMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type StartStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts            int64  `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AppId         *AppId `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
	FeClientId    string `protobuf:"bytes,3,opt,name=FeClientId,proto3" json:"FeClientId,omitempty"`
	ExistingReqId string `protobuf:"bytes,4,opt,name=ExistingReqId,proto3" json:"ExistingReqId,omitempty"`
}

func (x *StartStreamMessage) Reset() {
	*x = StartStreamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamMessage) ProtoMessage() {}

func (x *StartStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamMessage.ProtoReflect.Descriptor instead.
func (*StartStreamMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{10}
}

func (x *StartStreamMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *StartStreamMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *StartStreamMessage) GetFeClientId() string {
	if x != nil {
		return x.FeClientId
	}
	return ""
}

func (x *StartStreamMessage) GetExistingReqId() string {
	if x != nil {
		return x.ExistingReqId
	}
	return ""
}

type StartStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	ReqId  string     `protobuf:"bytes,2,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
}

func (x *StartStreamResponse) Reset() {
	*x = StartStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamResponse) ProtoMessage() {}

func (x *StartStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamResponse.ProtoReflect.Descriptor instead.
func (*StartStreamResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{11}
}

func (x *StartStreamResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *StartStreamResponse) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

type ReflectZoneMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts int64 `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *ReflectZoneMessage) Reset() {
	*x = ReflectZoneMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReflectZoneMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReflectZoneMessage) ProtoMessage() {}

func (x *ReflectZoneMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReflectZoneMessage.ProtoReflect.Descriptor instead.
func (*ReflectZoneMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{12}
}

func (x *ReflectZoneMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type ReflectZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	JsonData string     `protobuf:"bytes,2,opt,name=JsonData,proto3" json:"JsonData,omitempty"`
}

func (x *ReflectZoneResponse) Reset() {
	*x = ReflectZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReflectZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReflectZoneResponse) ProtoMessage() {}

func (x *ReflectZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReflectZoneResponse.ProtoReflect.Descriptor instead.
func (*ReflectZoneResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{13}
}

func (x *ReflectZoneResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ReflectZoneResponse) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type CallDataHandlerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts       int64   `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AppId    *AppId  `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Path     *PathId `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
	JsonData string  `protobuf:"bytes,4,opt,name=JsonData,proto3" json:"JsonData,omitempty"`
}

func (x *CallDataHandlerMessage) Reset() {
	*x = CallDataHandlerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDataHandlerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDataHandlerMessage) ProtoMessage() {}

func (x *CallDataHandlerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDataHandlerMessage.ProtoReflect.Descriptor instead.
func (*CallDataHandlerMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{14}
}

func (x *CallDataHandlerMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *CallDataHandlerMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *CallDataHandlerMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *CallDataHandlerMessage) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type CallDataHandlerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	JsonData string     `protobuf:"bytes,3,opt,name=JsonData,proto3" json:"JsonData,omitempty"`
}

func (x *CallDataHandlerResponse) Reset() {
	*x = CallDataHandlerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDataHandlerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDataHandlerResponse) ProtoMessage() {}

func (x *CallDataHandlerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDataHandlerResponse.ProtoReflect.Descriptor instead.
func (*CallDataHandlerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{15}
}

func (x *CallDataHandlerResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CallDataHandlerResponse) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type BackendPushMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts    int64   `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AppId *AppId  `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Path  *PathId `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *BackendPushMessage) Reset() {
	*x = BackendPushMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendPushMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendPushMessage) ProtoMessage() {}

func (x *BackendPushMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendPushMessage.ProtoReflect.Descriptor instead.
func (*BackendPushMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{16}
}

func (x *BackendPushMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *BackendPushMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *BackendPushMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

type BackendPushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *BackendPushResponse) Reset() {
	*x = BackendPushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendPushResponse) ProtoMessage() {}

func (x *BackendPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendPushResponse.ProtoReflect.Descriptor instead.
func (*BackendPushResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{17}
}

func (x *BackendPushResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type OpenAppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts    int64  `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AppId *AppId `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
}

func (x *OpenAppMessage) Reset() {
	*x = OpenAppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAppMessage) ProtoMessage() {}

func (x *OpenAppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAppMessage.ProtoReflect.Descriptor instead.
func (*OpenAppMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{18}
}

func (x *OpenAppMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *OpenAppMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

type OpenAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	AppConfigJson string     `protobuf:"bytes,2,opt,name=AppConfigJson,proto3" json:"AppConfigJson,omitempty"`
}

func (x *OpenAppResponse) Reset() {
	*x = OpenAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAppResponse) ProtoMessage() {}

func (x *OpenAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAppResponse.ProtoReflect.Descriptor instead.
func (*OpenAppResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{19}
}

func (x *OpenAppResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *OpenAppResponse) GetAppConfigJson() string {
	if x != nil {
		return x.AppConfigJson
	}
	return ""
}

type WriteAppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts            int64  `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AppId         *AppId `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
	AppConfigJson string `protobuf:"bytes,3,opt,name=AppConfigJson,proto3" json:"AppConfigJson,omitempty"`
	ConnectApp    bool   `protobuf:"varint,4,opt,name=ConnectApp,proto3" json:"ConnectApp,omitempty"`
}

func (x *WriteAppMessage) Reset() {
	*x = WriteAppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteAppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAppMessage) ProtoMessage() {}

func (x *WriteAppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAppMessage.ProtoReflect.Descriptor instead.
func (*WriteAppMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{20}
}

func (x *WriteAppMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *WriteAppMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *WriteAppMessage) GetAppConfigJson() string {
	if x != nil {
		return x.AppConfigJson
	}
	return ""
}

func (x *WriteAppMessage) GetConnectApp() bool {
	if x != nil {
		return x.ConnectApp
	}
	return false
}

type WriteAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *RtnStatus        `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	OptionWarnings map[string]string `protobuf:"bytes,2,rep,name=OptionWarnings,proto3" json:"OptionWarnings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WriteAppResponse) Reset() {
	*x = WriteAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteAppResponse) ProtoMessage() {}

func (x *WriteAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteAppResponse.ProtoReflect.Descriptor instead.
func (*WriteAppResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{21}
}

func (x *WriteAppResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *WriteAppResponse) GetOptionWarnings() map[string]string {
	if x != nil {
		return x.OptionWarnings
	}
	return nil
}

type RemoveAppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts    int64  `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	AppId *AppId `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
}

func (x *RemoveAppMessage) Reset() {
	*x = RemoveAppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppMessage) ProtoMessage() {}

func (x *RemoveAppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppMessage.ProtoReflect.Descriptor instead.
func (*RemoveAppMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveAppMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *RemoveAppMessage) GetAppId() *AppId {
	if x != nil {
		return x.AppId
	}
	return nil
}

type RemoveAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *RemoveAppResponse) Reset() {
	*x = RemoveAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppResponse) ProtoMessage() {}

func (x *RemoveAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppResponse.ProtoReflect.Descriptor instead.
func (*RemoveAppResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveAppResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SetPathMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts             int64   `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Path           *PathId `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	TxId           string  `protobuf:"bytes,3,opt,name=TxId,proto3" json:"TxId,omitempty"`
	HasBody        bool    `protobuf:"varint,4,opt,name=HasBody,proto3" json:"HasBody,omitempty"`
	ConnectRuntime bool    `protobuf:"varint,5,opt,name=ConnectRuntime,proto3" json:"ConnectRuntime,omitempty"`
	FileOptsJson   string  `protobuf:"bytes,6,opt,name=FileOptsJson,proto3" json:"FileOptsJson,omitempty"`
	BlobBytesKey   string  `protobuf:"bytes,7,opt,name=BlobBytesKey,proto3" json:"BlobBytesKey,omitempty"`
	BlobBytes      []byte  `protobuf:"bytes,8,opt,name=BlobBytes,proto3" json:"BlobBytes,omitempty"`
	ClientErr      bool    `protobuf:"varint,9,opt,name=ClientErr,proto3" json:"ClientErr,omitempty"`
}

func (x *SetPathMessage) Reset() {
	*x = SetPathMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPathMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPathMessage) ProtoMessage() {}

func (x *SetPathMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPathMessage.ProtoReflect.Descriptor instead.
func (*SetPathMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{24}
}

func (x *SetPathMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *SetPathMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *SetPathMessage) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *SetPathMessage) GetHasBody() bool {
	if x != nil {
		return x.HasBody
	}
	return false
}

func (x *SetPathMessage) GetConnectRuntime() bool {
	if x != nil {
		return x.ConnectRuntime
	}
	return false
}

func (x *SetPathMessage) GetFileOptsJson() string {
	if x != nil {
		return x.FileOptsJson
	}
	return ""
}

func (x *SetPathMessage) GetBlobBytesKey() string {
	if x != nil {
		return x.BlobBytesKey
	}
	return ""
}

func (x *SetPathMessage) GetBlobBytes() []byte {
	if x != nil {
		return x.BlobBytes
	}
	return nil
}

func (x *SetPathMessage) GetClientErr() bool {
	if x != nil {
		return x.ClientErr
	}
	return false
}

type SetPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	BlobFound    bool       `protobuf:"varint,2,opt,name=BlobFound,proto3" json:"BlobFound,omitempty"`
	BlobBytesKey string     `protobuf:"bytes,3,opt,name=BlobBytesKey,proto3" json:"BlobBytesKey,omitempty"`
}

func (x *SetPathResponse) Reset() {
	*x = SetPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPathResponse) ProtoMessage() {}

func (x *SetPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPathResponse.ProtoReflect.Descriptor instead.
func (*SetPathResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{25}
}

func (x *SetPathResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SetPathResponse) GetBlobFound() bool {
	if x != nil {
		return x.BlobFound
	}
	return false
}

func (x *SetPathResponse) GetBlobBytesKey() string {
	if x != nil {
		return x.BlobBytesKey
	}
	return ""
}

type RemovePathMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts   int64   `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Path *PathId `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *RemovePathMessage) Reset() {
	*x = RemovePathMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePathMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePathMessage) ProtoMessage() {}

func (x *RemovePathMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePathMessage.ProtoReflect.Descriptor instead.
func (*RemovePathMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{26}
}

func (x *RemovePathMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *RemovePathMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

type RemovePathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *RemovePathResponse) Reset() {
	*x = RemovePathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePathResponse) ProtoMessage() {}

func (x *RemovePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePathResponse.ProtoReflect.Descriptor instead.
func (*RemovePathResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{27}
}

func (x *RemovePathResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type FileInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          int64   `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Path        *PathId `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	DirOptsJson string  `protobuf:"bytes,3,opt,name=DirOptsJson,proto3" json:"DirOptsJson,omitempty"`
}

func (x *FileInfoMessage) Reset() {
	*x = FileInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoMessage) ProtoMessage() {}

func (x *FileInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoMessage.ProtoReflect.Descriptor instead.
func (*FileInfoMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{28}
}

func (x *FileInfoMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *FileInfoMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *FileInfoMessage) GetDirOptsJson() string {
	if x != nil {
		return x.DirOptsJson
	}
	return ""
}

type FileInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	FileInfoJson string     `protobuf:"bytes,2,opt,name=FileInfoJson,proto3" json:"FileInfoJson,omitempty"`
}

func (x *FileInfoResponse) Reset() {
	*x = FileInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoResponse) ProtoMessage() {}

func (x *FileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoResponse.ProtoReflect.Descriptor instead.
func (*FileInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{29}
}

func (x *FileInfoResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FileInfoResponse) GetFileInfoJson() string {
	if x != nil {
		return x.FileInfoJson
	}
	return ""
}

type ConnectLinkMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts   int64   `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Path *PathId `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *ConnectLinkMessage) Reset() {
	*x = ConnectLinkMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectLinkMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectLinkMessage) ProtoMessage() {}

func (x *ConnectLinkMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectLinkMessage.ProtoReflect.Descriptor instead.
func (*ConnectLinkMessage) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{30}
}

func (x *ConnectLinkMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ConnectLinkMessage) GetPath() *PathId {
	if x != nil {
		return x.Path
	}
	return nil
}

type ConnectLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RtnStatus `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ConnectLinkResponse) Reset() {
	*x = ConnectLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_dashproto_dashproto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectLinkResponse) ProtoMessage() {}

func (x *ConnectLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_dashproto_dashproto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectLinkResponse.ProtoReflect.Descriptor instead.
func (*ConnectLinkResponse) Descriptor() ([]byte, []int) {
	return file_pkg_dashproto_dashproto_proto_rawDescGZIP(), []int{31}
}

func (x *ConnectLinkResponse) GetStatus() *RtnStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_pkg_dashproto_dashproto_proto protoreflect.FileDescriptor

var file_pkg_dashproto_dashproto_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x64, 0x61, 0x73, 0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x22, 0x6b,
	0x0a, 0x09, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x6d, 0x45, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x50, 0x65, 0x72, 0x6d, 0x45, 0x72, 0x72, 0x22, 0x41, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x50,
	0x0a, 0x06, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x74, 0x68,
	0x4e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x46, 0x72, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x74, 0x68, 0x46, 0x72, 0x61, 0x67,
	0x22, 0x88, 0x02, 0x0a, 0x08, 0x52, 0x52, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x73, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x74, 0x6d,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x45, 0x72, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x4d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x22, 0xbd, 0x02, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x52, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x6f,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x52, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x22, 0x74, 0x0a, 0x14, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72,
	0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x91, 0x04, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x63, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x63, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x5a, 0x6f,
	0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x5a, 0x6f,
	0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x52, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e,
	0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xde, 0x03, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x41, 0x63, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x63, 0x63,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x6e, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x41, 0x6e, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x63, 0x54, 0x61, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72,
	0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x63, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x1a, 0x3b, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x63, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x48, 0x6f, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31,
	0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x14,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x54, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x49, 0x64, 0x22, 0x5d, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e,
	0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x71, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12,
	0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x54, 0x73, 0x22, 0x63, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x54, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x49, 0x64, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x73, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31,
	0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7b,
	0x0a, 0x12, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x54, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72,
	0x70, 0x63, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x49, 0x64, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x13, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x69, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x93, 0x01,
	0x0a, 0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54,
	0x73, 0x12, 0x2a, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a,
	0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x70,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x41, 0x70, 0x70, 0x22, 0xe4, 0x01, 0x0a, 0x10, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x2a,
	0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e,
	0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xa5, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x54, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x26, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74,
	0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x6f,
	0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4b, 0x65,
	0x79, 0x22, 0x4e, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e,
	0x72, 0x70, 0x63, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x52, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x46, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x0f, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x29, 0x0a, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49,
	0x64, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x72, 0x4f, 0x70,
	0x74, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69,
	0x72, 0x4f, 0x70, 0x74, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4a,
	0x73, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x64, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x74, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xf0, 0x08,
	0x0a, 0x0f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x23, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x24, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x21,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52,
	0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x22, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x31, 0x2e, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x26, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x73, 0x68, 0x12, 0x21, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x22, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e,
	0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1d, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x0c,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x23, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x70, 0x70, 0x12, 0x1d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12,
	0x1e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x1f, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x12,
	0x1f, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x20, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1d, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x20, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x21, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e,
	0x72, 0x70, 0x63, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x22, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x61, 0x77, 0x6b, 0x61, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x72, 0x67, 0x2d, 0x67, 0x6f,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_dashproto_dashproto_proto_rawDescOnce sync.Once
	file_pkg_dashproto_dashproto_proto_rawDescData = file_pkg_dashproto_dashproto_proto_rawDesc
)

func file_pkg_dashproto_dashproto_proto_rawDescGZIP() []byte {
	file_pkg_dashproto_dashproto_proto_rawDescOnce.Do(func() {
		file_pkg_dashproto_dashproto_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_dashproto_dashproto_proto_rawDescData)
	})
	return file_pkg_dashproto_dashproto_proto_rawDescData
}

var file_pkg_dashproto_dashproto_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_pkg_dashproto_dashproto_proto_goTypes = []interface{}{
	(*RtnStatus)(nil),               // 0: dashborg.rpc1.RtnStatus
	(*AppId)(nil),                   // 1: dashborg.rpc1.AppId
	(*PathId)(nil),                  // 2: dashborg.rpc1.PathId
	(*RRAction)(nil),                // 3: dashborg.rpc1.RRAction
	(*SendResponseMessage)(nil),     // 4: dashborg.rpc1.SendResponseMessage
	(*SendResponseResponse)(nil),    // 5: dashborg.rpc1.SendResponseResponse
	(*RequestMessage)(nil),          // 6: dashborg.rpc1.RequestMessage
	(*ConnectClientMessage)(nil),    // 7: dashborg.rpc1.ConnectClientMessage
	(*ConnectClientResponse)(nil),   // 8: dashborg.rpc1.ConnectClientResponse
	(*RequestStreamMessage)(nil),    // 9: dashborg.rpc1.RequestStreamMessage
	(*StartStreamMessage)(nil),      // 10: dashborg.rpc1.StartStreamMessage
	(*StartStreamResponse)(nil),     // 11: dashborg.rpc1.StartStreamResponse
	(*ReflectZoneMessage)(nil),      // 12: dashborg.rpc1.ReflectZoneMessage
	(*ReflectZoneResponse)(nil),     // 13: dashborg.rpc1.ReflectZoneResponse
	(*CallDataHandlerMessage)(nil),  // 14: dashborg.rpc1.CallDataHandlerMessage
	(*CallDataHandlerResponse)(nil), // 15: dashborg.rpc1.CallDataHandlerResponse
	(*BackendPushMessage)(nil),      // 16: dashborg.rpc1.BackendPushMessage
	(*BackendPushResponse)(nil),     // 17: dashborg.rpc1.BackendPushResponse
	(*OpenAppMessage)(nil),          // 18: dashborg.rpc1.OpenAppMessage
	(*OpenAppResponse)(nil),         // 19: dashborg.rpc1.OpenAppResponse
	(*WriteAppMessage)(nil),         // 20: dashborg.rpc1.WriteAppMessage
	(*WriteAppResponse)(nil),        // 21: dashborg.rpc1.WriteAppResponse
	(*RemoveAppMessage)(nil),        // 22: dashborg.rpc1.RemoveAppMessage
	(*RemoveAppResponse)(nil),       // 23: dashborg.rpc1.RemoveAppResponse
	(*SetPathMessage)(nil),          // 24: dashborg.rpc1.SetPathMessage
	(*SetPathResponse)(nil),         // 25: dashborg.rpc1.SetPathResponse
	(*RemovePathMessage)(nil),       // 26: dashborg.rpc1.RemovePathMessage
	(*RemovePathResponse)(nil),      // 27: dashborg.rpc1.RemovePathResponse
	(*FileInfoMessage)(nil),         // 28: dashborg.rpc1.FileInfoMessage
	(*FileInfoResponse)(nil),        // 29: dashborg.rpc1.FileInfoResponse
	(*ConnectLinkMessage)(nil),      // 30: dashborg.rpc1.ConnectLinkMessage
	(*ConnectLinkResponse)(nil),     // 31: dashborg.rpc1.ConnectLinkResponse
	nil,                             // 32: dashborg.rpc1.ConnectClientMessage.ProcTagsEntry
	nil,                             // 33: dashborg.rpc1.ConnectClientMessage.HostDataEntry
	nil,                             // 34: dashborg.rpc1.WriteAppResponse.OptionWarningsEntry
}
var file_pkg_dashproto_dashproto_proto_depIdxs = []int32{
	1,  // 0: dashborg.rpc1.SendResponseMessage.AppId:type_name -> dashborg.rpc1.AppId
	2,  // 1: dashborg.rpc1.SendResponseMessage.Path:type_name -> dashborg.rpc1.PathId
	3,  // 2: dashborg.rpc1.SendResponseMessage.Actions:type_name -> dashborg.rpc1.RRAction
	0,  // 3: dashborg.rpc1.SendResponseResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	1,  // 4: dashborg.rpc1.RequestMessage.AppId:type_name -> dashborg.rpc1.AppId
	2,  // 5: dashborg.rpc1.RequestMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 6: dashborg.rpc1.RequestMessage.Status:type_name -> dashborg.rpc1.RtnStatus
	32, // 7: dashborg.rpc1.ConnectClientMessage.ProcTags:type_name -> dashborg.rpc1.ConnectClientMessage.ProcTagsEntry
	33, // 8: dashborg.rpc1.ConnectClientMessage.HostData:type_name -> dashborg.rpc1.ConnectClientMessage.HostDataEntry
	0,  // 9: dashborg.rpc1.ConnectClientResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	1,  // 10: dashborg.rpc1.StartStreamMessage.AppId:type_name -> dashborg.rpc1.AppId
	0,  // 11: dashborg.rpc1.StartStreamResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	0,  // 12: dashborg.rpc1.ReflectZoneResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	1,  // 13: dashborg.rpc1.CallDataHandlerMessage.AppId:type_name -> dashborg.rpc1.AppId
	2,  // 14: dashborg.rpc1.CallDataHandlerMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 15: dashborg.rpc1.CallDataHandlerResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	1,  // 16: dashborg.rpc1.BackendPushMessage.AppId:type_name -> dashborg.rpc1.AppId
	2,  // 17: dashborg.rpc1.BackendPushMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 18: dashborg.rpc1.BackendPushResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	1,  // 19: dashborg.rpc1.OpenAppMessage.AppId:type_name -> dashborg.rpc1.AppId
	0,  // 20: dashborg.rpc1.OpenAppResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	1,  // 21: dashborg.rpc1.WriteAppMessage.AppId:type_name -> dashborg.rpc1.AppId
	0,  // 22: dashborg.rpc1.WriteAppResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	34, // 23: dashborg.rpc1.WriteAppResponse.OptionWarnings:type_name -> dashborg.rpc1.WriteAppResponse.OptionWarningsEntry
	1,  // 24: dashborg.rpc1.RemoveAppMessage.AppId:type_name -> dashborg.rpc1.AppId
	0,  // 25: dashborg.rpc1.RemoveAppResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	2,  // 26: dashborg.rpc1.SetPathMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 27: dashborg.rpc1.SetPathResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	2,  // 28: dashborg.rpc1.RemovePathMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 29: dashborg.rpc1.RemovePathResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	2,  // 30: dashborg.rpc1.FileInfoMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 31: dashborg.rpc1.FileInfoResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	2,  // 32: dashborg.rpc1.ConnectLinkMessage.Path:type_name -> dashborg.rpc1.PathId
	0,  // 33: dashborg.rpc1.ConnectLinkResponse.Status:type_name -> dashborg.rpc1.RtnStatus
	7,  // 34: dashborg.rpc1.DashborgService.ConnectClient:input_type -> dashborg.rpc1.ConnectClientMessage
	12, // 35: dashborg.rpc1.DashborgService.ReflectZone:input_type -> dashborg.rpc1.ReflectZoneMessage
	14, // 36: dashborg.rpc1.DashborgService.CallDataHandler:input_type -> dashborg.rpc1.CallDataHandlerMessage
	16, // 37: dashborg.rpc1.DashborgService.BackendPush:input_type -> dashborg.rpc1.BackendPushMessage
	9,  // 38: dashborg.rpc1.DashborgService.RequestStream:input_type -> dashborg.rpc1.RequestStreamMessage
	4,  // 39: dashborg.rpc1.DashborgService.SendResponse:input_type -> dashborg.rpc1.SendResponseMessage
	18, // 40: dashborg.rpc1.DashborgService.OpenApp:input_type -> dashborg.rpc1.OpenAppMessage
	20, // 41: dashborg.rpc1.DashborgService.WriteApp:input_type -> dashborg.rpc1.WriteAppMessage
	22, // 42: dashborg.rpc1.DashborgService.RemoveApp:input_type -> dashborg.rpc1.RemoveAppMessage
	24, // 43: dashborg.rpc1.DashborgService.SetPath:input_type -> dashborg.rpc1.SetPathMessage
	26, // 44: dashborg.rpc1.DashborgService.RemovePath:input_type -> dashborg.rpc1.RemovePathMessage
	28, // 45: dashborg.rpc1.DashborgService.FileInfo:input_type -> dashborg.rpc1.FileInfoMessage
	30, // 46: dashborg.rpc1.DashborgService.ConnectLink:input_type -> dashborg.rpc1.ConnectLinkMessage
	8,  // 47: dashborg.rpc1.DashborgService.ConnectClient:output_type -> dashborg.rpc1.ConnectClientResponse
	13, // 48: dashborg.rpc1.DashborgService.ReflectZone:output_type -> dashborg.rpc1.ReflectZoneResponse
	15, // 49: dashborg.rpc1.DashborgService.CallDataHandler:output_type -> dashborg.rpc1.CallDataHandlerResponse
	17, // 50: dashborg.rpc1.DashborgService.BackendPush:output_type -> dashborg.rpc1.BackendPushResponse
	6,  // 51: dashborg.rpc1.DashborgService.RequestStream:output_type -> dashborg.rpc1.RequestMessage
	5,  // 52: dashborg.rpc1.DashborgService.SendResponse:output_type -> dashborg.rpc1.SendResponseResponse
	19, // 53: dashborg.rpc1.DashborgService.OpenApp:output_type -> dashborg.rpc1.OpenAppResponse
	21, // 54: dashborg.rpc1.DashborgService.WriteApp:output_type -> dashborg.rpc1.WriteAppResponse
	23, // 55: dashborg.rpc1.DashborgService.RemoveApp:output_type -> dashborg.rpc1.RemoveAppResponse
	25, // 56: dashborg.rpc1.DashborgService.SetPath:output_type -> dashborg.rpc1.SetPathResponse
	27, // 57: dashborg.rpc1.DashborgService.RemovePath:output_type -> dashborg.rpc1.RemovePathResponse
	29, // 58: dashborg.rpc1.DashborgService.FileInfo:output_type -> dashborg.rpc1.FileInfoResponse
	31, // 59: dashborg.rpc1.DashborgService.ConnectLink:output_type -> dashborg.rpc1.ConnectLinkResponse
	47, // [47:60] is the sub-list for method output_type
	34, // [34:47] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_pkg_dashproto_dashproto_proto_init() }
func file_pkg_dashproto_dashproto_proto_init() {
	if File_pkg_dashproto_dashproto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_dashproto_dashproto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RtnStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RRAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStreamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReflectZoneMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReflectZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDataHandlerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDataHandlerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendPushMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendPushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteAppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPathMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePathMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectLinkMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_dashproto_dashproto_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_dashproto_dashproto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_dashproto_dashproto_proto_goTypes,
		DependencyIndexes: file_pkg_dashproto_dashproto_proto_depIdxs,
		MessageInfos:      file_pkg_dashproto_dashproto_proto_msgTypes,
	}.Build()
	File_pkg_dashproto_dashproto_proto = out.File
	file_pkg_dashproto_dashproto_proto_rawDesc = nil
	file_pkg_dashproto_dashproto_proto_goTypes = nil
	file_pkg_dashproto_dashproto_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DashborgServiceClient is the client API for DashborgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DashborgServiceClient interface {
	ConnectClient(ctx context.Context, in *ConnectClientMessage, opts ...grpc.CallOption) (*ConnectClientResponse, error)
	ReflectZone(ctx context.Context, in *ReflectZoneMessage, opts ...grpc.CallOption) (*ReflectZoneResponse, error)
	CallDataHandler(ctx context.Context, in *CallDataHandlerMessage, opts ...grpc.CallOption) (*CallDataHandlerResponse, error)
	BackendPush(ctx context.Context, in *BackendPushMessage, opts ...grpc.CallOption) (*BackendPushResponse, error)
	RequestStream(ctx context.Context, in *RequestStreamMessage, opts ...grpc.CallOption) (DashborgService_RequestStreamClient, error)
	SendResponse(ctx context.Context, in *SendResponseMessage, opts ...grpc.CallOption) (*SendResponseResponse, error)
	OpenApp(ctx context.Context, in *OpenAppMessage, opts ...grpc.CallOption) (*OpenAppResponse, error)
	WriteApp(ctx context.Context, in *WriteAppMessage, opts ...grpc.CallOption) (*WriteAppResponse, error)
	RemoveApp(ctx context.Context, in *RemoveAppMessage, opts ...grpc.CallOption) (*RemoveAppResponse, error)
	SetPath(ctx context.Context, opts ...grpc.CallOption) (DashborgService_SetPathClient, error)
	RemovePath(ctx context.Context, in *RemovePathMessage, opts ...grpc.CallOption) (*RemovePathResponse, error)
	FileInfo(ctx context.Context, in *FileInfoMessage, opts ...grpc.CallOption) (*FileInfoResponse, error)
	ConnectLink(ctx context.Context, in *ConnectLinkMessage, opts ...grpc.CallOption) (*ConnectLinkResponse, error)
}

type dashborgServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDashborgServiceClient(cc grpc.ClientConnInterface) DashborgServiceClient {
	return &dashborgServiceClient{cc}
}

func (c *dashborgServiceClient) ConnectClient(ctx context.Context, in *ConnectClientMessage, opts ...grpc.CallOption) (*ConnectClientResponse, error) {
	out := new(ConnectClientResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/ConnectClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) ReflectZone(ctx context.Context, in *ReflectZoneMessage, opts ...grpc.CallOption) (*ReflectZoneResponse, error) {
	out := new(ReflectZoneResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/ReflectZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) CallDataHandler(ctx context.Context, in *CallDataHandlerMessage, opts ...grpc.CallOption) (*CallDataHandlerResponse, error) {
	out := new(CallDataHandlerResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/CallDataHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) BackendPush(ctx context.Context, in *BackendPushMessage, opts ...grpc.CallOption) (*BackendPushResponse, error) {
	out := new(BackendPushResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/BackendPush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) RequestStream(ctx context.Context, in *RequestStreamMessage, opts ...grpc.CallOption) (DashborgService_RequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DashborgService_serviceDesc.Streams[0], "/dashborg.rpc1.DashborgService/RequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &dashborgServiceRequestStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DashborgService_RequestStreamClient interface {
	Recv() (*RequestMessage, error)
	grpc.ClientStream
}

type dashborgServiceRequestStreamClient struct {
	grpc.ClientStream
}

func (x *dashborgServiceRequestStreamClient) Recv() (*RequestMessage, error) {
	m := new(RequestMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dashborgServiceClient) SendResponse(ctx context.Context, in *SendResponseMessage, opts ...grpc.CallOption) (*SendResponseResponse, error) {
	out := new(SendResponseResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/SendResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) OpenApp(ctx context.Context, in *OpenAppMessage, opts ...grpc.CallOption) (*OpenAppResponse, error) {
	out := new(OpenAppResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/OpenApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) WriteApp(ctx context.Context, in *WriteAppMessage, opts ...grpc.CallOption) (*WriteAppResponse, error) {
	out := new(WriteAppResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/WriteApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) RemoveApp(ctx context.Context, in *RemoveAppMessage, opts ...grpc.CallOption) (*RemoveAppResponse, error) {
	out := new(RemoveAppResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/RemoveApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) SetPath(ctx context.Context, opts ...grpc.CallOption) (DashborgService_SetPathClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DashborgService_serviceDesc.Streams[1], "/dashborg.rpc1.DashborgService/SetPath", opts...)
	if err != nil {
		return nil, err
	}
	x := &dashborgServiceSetPathClient{stream}
	return x, nil
}

type DashborgService_SetPathClient interface {
	Send(*SetPathMessage) error
	Recv() (*SetPathResponse, error)
	grpc.ClientStream
}

type dashborgServiceSetPathClient struct {
	grpc.ClientStream
}

func (x *dashborgServiceSetPathClient) Send(m *SetPathMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dashborgServiceSetPathClient) Recv() (*SetPathResponse, error) {
	m := new(SetPathResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dashborgServiceClient) RemovePath(ctx context.Context, in *RemovePathMessage, opts ...grpc.CallOption) (*RemovePathResponse, error) {
	out := new(RemovePathResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/RemovePath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) FileInfo(ctx context.Context, in *FileInfoMessage, opts ...grpc.CallOption) (*FileInfoResponse, error) {
	out := new(FileInfoResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/FileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashborgServiceClient) ConnectLink(ctx context.Context, in *ConnectLinkMessage, opts ...grpc.CallOption) (*ConnectLinkResponse, error) {
	out := new(ConnectLinkResponse)
	err := c.cc.Invoke(ctx, "/dashborg.rpc1.DashborgService/ConnectLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashborgServiceServer is the server API for DashborgService service.
type DashborgServiceServer interface {
	ConnectClient(context.Context, *ConnectClientMessage) (*ConnectClientResponse, error)
	ReflectZone(context.Context, *ReflectZoneMessage) (*ReflectZoneResponse, error)
	CallDataHandler(context.Context, *CallDataHandlerMessage) (*CallDataHandlerResponse, error)
	BackendPush(context.Context, *BackendPushMessage) (*BackendPushResponse, error)
	RequestStream(*RequestStreamMessage, DashborgService_RequestStreamServer) error
	SendResponse(context.Context, *SendResponseMessage) (*SendResponseResponse, error)
	OpenApp(context.Context, *OpenAppMessage) (*OpenAppResponse, error)
	WriteApp(context.Context, *WriteAppMessage) (*WriteAppResponse, error)
	RemoveApp(context.Context, *RemoveAppMessage) (*RemoveAppResponse, error)
	SetPath(DashborgService_SetPathServer) error
	RemovePath(context.Context, *RemovePathMessage) (*RemovePathResponse, error)
	FileInfo(context.Context, *FileInfoMessage) (*FileInfoResponse, error)
	ConnectLink(context.Context, *ConnectLinkMessage) (*ConnectLinkResponse, error)
}

// UnimplementedDashborgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDashborgServiceServer struct {
}

func (*UnimplementedDashborgServiceServer) ConnectClient(context.Context, *ConnectClientMessage) (*ConnectClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectClient not implemented")
}
func (*UnimplementedDashborgServiceServer) ReflectZone(context.Context, *ReflectZoneMessage) (*ReflectZoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReflectZone not implemented")
}
func (*UnimplementedDashborgServiceServer) CallDataHandler(context.Context, *CallDataHandlerMessage) (*CallDataHandlerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallDataHandler not implemented")
}
func (*UnimplementedDashborgServiceServer) BackendPush(context.Context, *BackendPushMessage) (*BackendPushResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackendPush not implemented")
}
func (*UnimplementedDashborgServiceServer) RequestStream(*RequestStreamMessage, DashborgService_RequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method RequestStream not implemented")
}
func (*UnimplementedDashborgServiceServer) SendResponse(context.Context, *SendResponseMessage) (*SendResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendResponse not implemented")
}
func (*UnimplementedDashborgServiceServer) OpenApp(context.Context, *OpenAppMessage) (*OpenAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenApp not implemented")
}
func (*UnimplementedDashborgServiceServer) WriteApp(context.Context, *WriteAppMessage) (*WriteAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteApp not implemented")
}
func (*UnimplementedDashborgServiceServer) RemoveApp(context.Context, *RemoveAppMessage) (*RemoveAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveApp not implemented")
}
func (*UnimplementedDashborgServiceServer) SetPath(DashborgService_SetPathServer) error {
	return status.Errorf(codes.Unimplemented, "method SetPath not implemented")
}
func (*UnimplementedDashborgServiceServer) RemovePath(context.Context, *RemovePathMessage) (*RemovePathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePath not implemented")
}
func (*UnimplementedDashborgServiceServer) FileInfo(context.Context, *FileInfoMessage) (*FileInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileInfo not implemented")
}
func (*UnimplementedDashborgServiceServer) ConnectLink(context.Context, *ConnectLinkMessage) (*ConnectLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectLink not implemented")
}

func RegisterDashborgServiceServer(s *grpc.Server, srv DashborgServiceServer) {
	s.RegisterService(&_DashborgService_serviceDesc, srv)
}

func _DashborgService_ConnectClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).ConnectClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/ConnectClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).ConnectClient(ctx, req.(*ConnectClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_ReflectZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReflectZoneMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).ReflectZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/ReflectZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).ReflectZone(ctx, req.(*ReflectZoneMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_CallDataHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallDataHandlerMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).CallDataHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/CallDataHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).CallDataHandler(ctx, req.(*CallDataHandlerMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_BackendPush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackendPushMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).BackendPush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/BackendPush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).BackendPush(ctx, req.(*BackendPushMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_RequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestStreamMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DashborgServiceServer).RequestStream(m, &dashborgServiceRequestStreamServer{stream})
}

type DashborgService_RequestStreamServer interface {
	Send(*RequestMessage) error
	grpc.ServerStream
}

type dashborgServiceRequestStreamServer struct {
	grpc.ServerStream
}

func (x *dashborgServiceRequestStreamServer) Send(m *RequestMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _DashborgService_SendResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendResponseMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).SendResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/SendResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).SendResponse(ctx, req.(*SendResponseMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_OpenApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenAppMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).OpenApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/OpenApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).OpenApp(ctx, req.(*OpenAppMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_WriteApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteAppMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).WriteApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/WriteApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).WriteApp(ctx, req.(*WriteAppMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_RemoveApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAppMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).RemoveApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/RemoveApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).RemoveApp(ctx, req.(*RemoveAppMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_SetPath_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DashborgServiceServer).SetPath(&dashborgServiceSetPathServer{stream})
}

type DashborgService_SetPathServer interface {
	Send(*SetPathResponse) error
	Recv() (*SetPathMessage, error)
	grpc.ServerStream
}

type dashborgServiceSetPathServer struct {
	grpc.ServerStream
}

func (x *dashborgServiceSetPathServer) Send(m *SetPathResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dashborgServiceSetPathServer) Recv() (*SetPathMessage, error) {
	m := new(SetPathMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DashborgService_RemovePath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePathMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).RemovePath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/RemovePath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).RemovePath(ctx, req.(*RemovePathMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_FileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileInfoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).FileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/FileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).FileInfo(ctx, req.(*FileInfoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashborgService_ConnectLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectLinkMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashborgServiceServer).ConnectLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dashborg.rpc1.DashborgService/ConnectLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashborgServiceServer).ConnectLink(ctx, req.(*ConnectLinkMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _DashborgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dashborg.rpc1.DashborgService",
	HandlerType: (*DashborgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnectClient",
			Handler:    _DashborgService_ConnectClient_Handler,
		},
		{
			MethodName: "ReflectZone",
			Handler:    _DashborgService_ReflectZone_Handler,
		},
		{
			MethodName: "CallDataHandler",
			Handler:    _DashborgService_CallDataHandler_Handler,
		},
		{
			MethodName: "BackendPush",
			Handler:    _DashborgService_BackendPush_Handler,
		},
		{
			MethodName: "SendResponse",
			Handler:    _DashborgService_SendResponse_Handler,
		},
		{
			MethodName: "OpenApp",
			Handler:    _DashborgService_OpenApp_Handler,
		},
		{
			MethodName: "WriteApp",
			Handler:    _DashborgService_WriteApp_Handler,
		},
		{
			MethodName: "RemoveApp",
			Handler:    _DashborgService_RemoveApp_Handler,
		},
		{
			MethodName: "RemovePath",
			Handler:    _DashborgService_RemovePath_Handler,
		},
		{
			MethodName: "FileInfo",
			Handler:    _DashborgService_FileInfo_Handler,
		},
		{
			MethodName: "ConnectLink",
			Handler:    _DashborgService_ConnectLink_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RequestStream",
			Handler:       _DashborgService_RequestStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SetPath",
			Handler:       _DashborgService_SetPath_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/dashproto/dashproto.proto",
}
